#=============================================
#
# Define a macro to simplify building and linking test executables
#
#=============================================
macro( build_test name)
  include_directories(${TEST_INCLUDE_DIRS})
  add_executable( ${name} "${name}.cpp" $<TARGET_OBJECTS:MainTest>)
  set(DEPS nvmDS_deps)
  if (${ARGC} GREATER 1) # extra dependencies
    set(DEPS ${DEPS} ${ARGV1})
  endif()
  target_link_libraries( ${name} ${DEPS})
endmacro( build_test )

macro( build_bench path)
  string(REGEX REPLACE ".*/([a-zA-Z0-9_]+)$" "\\1" name "${path}")
  include_directories(${TEST_INCLUDE_DIRS})
  add_executable( ${name} "${path}.cpp")
  set(DEPS nvmDS_deps benchmark)
  if(ENABLE_PCM)
    add_dependencies(${name} pcm)
    set(DEPS ${DEPS} ${pcm_SOURCE_DIR}/libPCM.a)
  endif()
  if (${ARGC} GREATER 1) # extra dependencies
    set(DEPS ${DEPS} ${ARGV1})
  endif()
  target_link_libraries( ${name} ${DEPS} )
endmacro( build_bench )

#=============================================
#
# Define a macro to simplify adding tests
#
#=============================================
macro (do_test name)
  add_test(
    NAME ${name}
    COMMAND "${CMAKE_CURRENT_BINARY_DIR}/${name}"
    )
  if (${ARGC} GREATER 1) # extra dependencies
    build_test( ${name} ${ARGV1})
  else()
    build_test( ${name})
  endif()
endmacro(do_test)

macro (do_bench path)
  string(REGEX REPLACE ".*/([a-zA-Z0-9_]+)$" "\\1" name "${path}")
  add_test(
    NAME ${name}
    COMMAND "${CMAKE_CURRENT_BINARY_DIR}/${name}"
    --benchmark_min_time=0.0001
    )
  if (${ARGC} GREATER 1) # extra dependencies
    build_bench( ${path} ${ARGV1})
  else()
    build_bench( ${path})
  endif()
endmacro(do_bench)
